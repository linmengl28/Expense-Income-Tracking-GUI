/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/8.0.2/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    application
    jacoco
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    // testImplementation(libs.junit.jupiter)
    testImplementation("org.junit.jupiter:junit-jupiter:5.9.1")

    // testRuntimeOnly("org.junit.platform:junit-platform-launcher")

    // This dependency is used by the application.
    // implementation(libs.guava)
    implementation("com.google.guava:guava:31.1-jre")

    // implementation 'org.jfree:jfreechart:1.0.19'
    implementation("org.jfree:jfreechart:1.5.0")

    implementation("org.swinglabs.swingx:swingx-all:1.6.4")
}

// Apply a specific Java toolchain to ease working on different environments.
// java {
//     toolchain {
//         languageVersion = JavaLanguageVersion.of(21)
//     }
// }

application {
    // Define the main class for the application.
    mainClass.set("finalprojects.App")
}

tasks.named<Test>("test") {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

jacoco {
    toolVersion = "0.8.9"
    reportsDirectory.set(layout.buildDirectory.dir("customJacocoReportDir"))
}

tasks.jacocoTestReport {
    dependsOn(tasks.test)
    reports {
        xml.required.set(false)
        csv.required.set(false)
        html.outputLocation.set(layout.buildDirectory.dir("jacocoHtml"))
    }
}

// tasks.jacocoTestCoverageVerification {
//     violationRules {
//         rule {
//             limit {
//                 minimum = "0.5".toBigDecimal()

//             }
//         }
//     }
// }

